# This workflow will upload a Python Package to Pypi using Twine when a release tag is pushed.
# On every version tag, it will run CI/CD pipeline.

name: CI CD
name: CI CD

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v3

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Test with pytest
      run: poetry run pytest --cov=bboxconverter --cov-report=xml

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml   # coverage report

    - name: Build documentation
      run: poetry run make html --directory docs/
      
  cd:
    # Only run this job if the "ci" job passes
    needs: ci

    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Check-out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Build package
      run: poetry build
      
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
